--
class Slider {
  constructor() {
    this.clicked = false
    this.clickStart = 0
    this.starting = 0
  }

  click(e) {
    this.clicked = true;
    this.clickStart = e.clientX + document.body.scrollLeft;
  }

  drag = e => {
    if (this.clicked) {
      let curr = e.clientX + document.body.scrollLeft;
      let pos = this.starting + (curr - this.clickStart);
      let w = this.width - 10;
      this.pos = pos < 0 ? 0 : pos > w ? w : pos;
      this.emit('slide', parseInt(this.pos/(this.width-10)*(this.max)));
      $sync();
    }
  }

  mouseup = () => {
    this.clicked = false;
    this.starting = this.pos;
    $sync();
  }

  mount() {
    document.addEventListener('mouseup', this.mouseup)
    document.addEventListener('mousemove', this.drag)
  }

  unmount() {
    document.removeEventListener('mouseup', this.mouseup)
    document.removeEventListener('mousemove', this.drag)
  }
}
--

export tag Slider [
  let pos = 0
  let width = props.width
  let max = props.max

  div.slider style='width:{{width}}px' [
    div.slider-bar
      style='transform:translateX({{pos}}px);'
      on:mousedown='this.click($e)'
      []
  ]
]